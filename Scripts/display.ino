#include <Arduino.h>
#include <U8g2lib.h>
#include <Wire.h>

// width x height = 64,64
static const unsigned char boot[] U8X8_PROGMEM = {
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80,
   0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x0f, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0xf8, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc,
   0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00,
   0x00, 0x00, 0xc0, 0xff, 0xfd, 0x03, 0x00, 0x00, 0x00, 0x00, 0xe0, 0xff,
   0xef, 0x0f, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xff, 0xff, 0x3f, 0x00, 0x00,
   0x00, 0x00, 0xfe, 0xff, 0x7f, 0x5b, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff,
   0xef, 0xff, 0x01, 0x00, 0x00, 0xc0, 0xff, 0xff, 0xff, 0xf6, 0x07, 0x00,
   0x00, 0xe0, 0xff, 0xff, 0xec, 0xdf, 0x06, 0x00, 0x00, 0xf0, 0xff, 0x3f,
   0xf8, 0xf7, 0x01, 0x00, 0x00, 0xe0, 0xff, 0x1f, 0xd0, 0x7e, 0x01, 0x00,
   0x00, 0xe0, 0xff, 0x07, 0xc0, 0x17, 0x00, 0x00, 0x00, 0xe0, 0xff, 0x01,
   0x00, 0x1e, 0x00, 0x00, 0x00, 0xf0, 0x7f, 0x00, 0x00, 0x02, 0x00, 0x00,
   0x00, 0xe0, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x7f, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0xf0, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x7f, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0xe0, 0x7f, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0xf0, 0x7f, 0x00,
   0x80, 0x3f, 0x00, 0x00, 0x00, 0xe0, 0x7f, 0x00, 0xe0, 0x7f, 0x00, 0x00,
   0x00, 0xe0, 0x7f, 0x00, 0xf8, 0xff, 0x01, 0x00, 0x00, 0xe0, 0x7f, 0x00,
   0xfc, 0xff, 0x07, 0x00, 0x00, 0xf0, 0x7f, 0x00, 0xfe, 0xff, 0x07, 0x00,
   0x00, 0xe0, 0x7f, 0x00, 0xfc, 0xff, 0x07, 0x00, 0x00, 0xe0, 0x7f, 0x00,
   0xf0, 0xff, 0x00, 0x00, 0x00, 0xe0, 0x7f, 0x00, 0xc0, 0x7f, 0x00, 0x00,
   0x00, 0xf0, 0x7f, 0x00, 0x80, 0x1f, 0x00, 0x00, 0x00, 0xe0, 0x7f, 0x00,
   0x00, 0x06, 0x00, 0x00, 0x00, 0xe0, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0xe0, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x7f, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0xf0, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x7f, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0xff, 0x00, 0x00, 0x0f, 0x00, 0x00,
   0x00, 0xe0, 0xff, 0x03, 0x80, 0x3f, 0x00, 0x00, 0x00, 0xf0, 0xff, 0x0f,
   0xe0, 0x7f, 0x00, 0x00, 0x00, 0xe0, 0xff, 0x1f, 0xf8, 0xff, 0x01, 0x00,
   0x00, 0xf0, 0xff, 0x7f, 0xfe, 0xff, 0x07, 0x00, 0x00, 0xe0, 0xff, 0xff,
   0xff, 0xff, 0x0f, 0x00, 0x00, 0x80, 0xff, 0xff, 0xff, 0xff, 0x03, 0x00,
   0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0xfc, 0xff,
   0xff, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xff, 0xff, 0x1f, 0x00, 0x00,
   0x00, 0x00, 0xe0, 0xff, 0xff, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x80, 0xff,
   0xff, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0xff, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0xf8, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0,
   0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x07, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

U8G2_SSD1306_128X64_NONAME_1_SW_I2C u8g2(U8G2_R0, /* clock=*/ SCL, /* data=*/ SDA, /* reset=*/ U8X8_PIN_NONE);

void setup(void) {
  u8g2.begin();
  u8g2.setFlipMode(0);
  u8g2.setBitmapMode(false /* solid */);
  u8g2.firstPage();  
  do {
    u8g2.drawXBMP(32, 0, 64, 64, boot);
  } while( u8g2.nextPage() );
  delay(4000);
}
void loop(void) {
}


